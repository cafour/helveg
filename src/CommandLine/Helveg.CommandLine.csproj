<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Compilation-ish -->
    <OutputType>Exe</OutputType>
    <TargetFramework>net7.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <AssemblyName>helveg</AssemblyName>
    <Version>0.0.0-dev</Version>
    <RollForward>LatestMajor</RollForward>
    <!-- Well this doesn't work -->
    <!-- <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences> -->
  </PropertyGroup>

  <PropertyGroup>
    <!-- Package-ish -->
    <PackAsTool>true</PackAsTool>
    <ToolCommandName>helveg</ToolCommandName>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build" Version="17.4.0" ExcludeAssets="runtime" />
    <PackageReference Include="Microsoft.Build.Locator" Version="1.5.5" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.4.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" Version="4.4.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="7.0.0" />
    <!-- NuGet.ProjectModel is required since Microsoft.Build.Locator doesn't load NuGet assemblies
      see https://github.com/dotnet/roslyn/issues/36072 -->
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    <PackageReference Include="System.CommandLine.NamingConventionBinder" Version="2.0.0-beta4.22272.1" />
    <!-- NuGet.ProjectModel generates a conflict which the following dependency resolves -->
    <PackageReference Include="System.Security.Cryptography.ProtectedData" Version="7.0.0" />
    <PackageReference Include="System.Text.Json" Version="7.0.1" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="$(BaseIntermediateOutputPath)/esbuild/helveg.js" LogicalName="helveg.js" />
    <EmbeddedResource Include="$(BaseIntermediateOutputPath)/esbuild/helveg.css" LogicalName="helveg.css" />
  </ItemGroup>
  
  <ItemGroup>
    <NpmBuildInputFiles Include="Scripts/**/*.ts" />
    <NpmBuildInputFiles Include="Scripts/**/*.scss" />
    <NpmBuildInputFiles Include="tsconfig.json" />
    <NpmBuildInputFiles Include="package.json" />
    <NpmBuildInputFiles Include="package-lock.json" />
    <NpmBuildInputFiles Include="build.js" />
  </ItemGroup>
  
  <ItemGroup>
    <NpmBuildOutputFiles Include="$(BaseIntermediateOutputPath)/esbuild/*.js" />
    <NpmBuildOutputFiles Include="$(BaseIntermediateOutputPath)/esbuild/*.css" />
  </ItemGroup>

  <Target Name="NpmInstall" BeforeTargets="DispatchToInnerBuilds" Inputs="package.json" Outputs="node_modules/.install-stamp">
    <Message Text="Restoring npm packages declared in package.json" Importance="High" />
    <Exec Command="npm ci" EnvironmentVariables="$(EnvOverrides)" />
    <Touch Files="node_modules/.install-stamp" AlwaysCreate="true" />
  </Target>

   <Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="DispatchToInnerBuilds;BeforeBuild" Inputs="@(NpmBuildInputFiles)" Outputs="@(NpmBuildOutputFiles)">
    <Message Text="Running npm target build:$(Configuration)" Importance="High" />
    <Exec Command="npm run build:$(Configuration)" EnvironmentVariables="$(EnvOverrides)" />
  </Target>

</Project>
