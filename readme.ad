= Ray Tracing Playground

== Docs

Only the most important documents:

* link:docs/resources.ad[Resources]
* link:docs/assignment.ad[Assignment]

== Thesis

* link:https://is.muni.cz/do/fi/uredni_deska/predpisy/smernice/Smernice_dekana_2_2018_radne_ukonceni_studia.pdf[Řádné ukončení studia v bakalářských a navazujících magisterských studijních programech]
* link:https://is.muni.cz/do/fi/uredni_deska/predpisy/smernice/Smernice_dekana_1_2018_zaverecne_prace.pdf[Tvorba, odevzdání, zveřejňování a hodnocení závěrečných (bakalářských a diplomových) prací]
* link:https://www.fi.muni.cz/studies/bachelor-diploma-theses-advisors-opponents.html[Bakalářské a diplomové práce: pokyny pro vedoucí a oponenty]
* link:https://www.fi.muni.cz/files/studijni/manual-bpdp.pdf[Bakalářské a diplomové práce na FI MU]
* link:https://www.fi.muni.cz/studies/licence.html[Licence k závěrečné práci studentů FI MU]

== `vku`

A thin and incomplete C++ wrapper around Vulkan. Also a renderer.

== `helveg`

The hardly working masterpiece of a software.

== `cmake`

Bunch of maybe-reusable CMake mess.

== learning/`one-weekend`

Contains three implementations of the link:https://raytracing.github.io/[Ray Tracing in One Weekend] book:

* `one-weekend` - the original single-threaded app
* `one-weekend-threaded` - a modified version that runs on multiple threads
* `one-weekend-cuda` - a version utilizing CUDA; based on
  link:https://devblogs.nvidia.com/accelerated-ray-tracing-cuda/[this article].

All three implementations are horribly unoptimized since the intent of this endeavor was to gain some intuition about
how ray tracing works.

== learning/`cuda-introduction`

Implements link:https://devblogs.nvidia.com/even-easier-introduction-cuda/[this tutorial].

== learning/`directx`

An attempt at drawing a triangle with D3D12. It's barely able to create a window.

== learning/`vulkan`

Draws a colourful triangle to the screen. Based on link:https://vulkan-tutorial.com/[this tutorial].
